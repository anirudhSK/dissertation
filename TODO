2. generalizability.txt
--> Add a multiply-accumulate atom to the Domino set. The only reason we didn't
add it to the original Domino paper was because queue size information for RED
was not available at enqueue. We knew of it all the way back to the 2013
HotNets paper.
--> Distinguish computational capabilities of a pipeline from information not
being available. For instance, RED needs queue depth that is not available, but
the EWMA operation itself is rather straightforward.

Concrete things to add to generalizability.txt/Domino eval:
2.0. Worth pointing out that many of these algorithms were never intended for a hardware router and would probably be written differently now that programmable high-speed routers are actually possible.
2a. Add a guard column to the Domino algorithm examples, esp. now that we are moving many of
the conditional checks into the guards (eg. DNS TTL, CONGA, HULA, BLUE, pretty much everything is per-port).
2b. Add a paragraph on the memory requirements of these algorithms when maintaining per-flow state.
2c. Add this trick of pre-computing stateless parts to keep the stateful computations small and short.
2d. Add this general template for stateful computation that all this is pointing towards.  
i.e., if (g1) s1 = u1(...)
      if (g2) s2 = u2(...) and so on

3. Make an e2e pass, especially from Chapters 3, 4, and 5, address nits.txt

4. Proof and explanation of fixed-point algorithm in Marple. Explain compiler
in Marple more clearly.

10. Future proofness of these designs (or) will the ideas hold in ten years?
